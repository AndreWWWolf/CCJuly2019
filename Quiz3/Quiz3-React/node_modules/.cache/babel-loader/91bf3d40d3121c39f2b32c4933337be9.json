{"ast":null,"code":"import _defineProperty from \"/Users/andrewwolf/Codecore/JulyBootcamp/Quiz3/Quiz3-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andrewwolf/Codecore/JulyBootcamp/Quiz3/Quiz3-React/src/Components/EditPostPage/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Posts } from '../../api/requests';\nexport default class EditPostPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {\n        title: '',\n        body: ''\n      },\n      errors: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    Posts.find(this.props.match.params.id).then(data => {\n      this.setState({\n        post: {\n          title: data.title,\n          body: data.body\n        },\n        errors: []\n      });\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name,\n          value = target.value;\n    const newData = {\n      [name]: value\n    };\n    this.setState({\n      post: _objectSpread({}, this.state.post, {}, newData)\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    Posts.update(this.state, this.props.match.params.id).then(data => {\n      console.log(data);\n\n      if (data.errors) {\n        this.setState(_objectSpread({}, this.state, {\n          errors: data.errors\n        }));\n      } else {\n        this.props.history.push(\"/posts/\".concat(data.post.id));\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.errors ? React.createElement(\"ul\", {\n      className: \"form-errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.errors.map((error, index) => {\n      return React.createElement(\"li\", {\n        className: \"error\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, error);\n    })) : null, React.createElement(\"form\", {\n      className: \"post-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      onChange: this.handleChange,\n      value: this.state.post.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Body\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"body\",\n      placeholder: \"Enter something\",\n      onChange: this.handleChange,\n      value: this.state.post.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewwolf/Codecore/JulyBootcamp/Quiz3/Quiz3-React/src/Components/EditPostPage/index.js"],"names":["React","Posts","EditPostPage","Component","constructor","props","state","post","title","body","errors","handleChange","bind","handleSubmit","componentDidMount","find","match","params","id","then","data","setState","event","target","name","value","newData","preventDefault","update","console","log","history","push","render","map","error","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Posts } from '../../api/requests';\n\nexport default class EditPostPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      post: {\n        title: '',\n        body: ''\n      },\n      errors: []\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    Posts.find(this.props.match.params.id)\n    .then(data => {\n      this.setState({\n        post: {\n          title: data.title,\n          body: data.body\n        },\n        errors: []\n      })\n    })\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const {name, value } = target;\n\n    const newData = {[name]: value}\n    this.setState({\n      post: {\n        ...this.state.post,\n        ...newData\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    Posts.update(this.state, this.props.match.params.id)\n    .then(data => {\n      console.log(data);\n      if (data.errors) {\n        this.setState({\n          ...this.state,\n          errors: data.errors\n        })\n      } else {\n        this.props.history.push(`/posts/${data.post.id}`);\n      }\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"form-container\">\n        {this.state.errors ? <ul className=\"form-errors\">\n          {this.state.errors.map((error, index) => {\n            return <li className=\"error\" key={index}>{error}</li>\n          })}\n        </ul>\n        : null}\n\n\n\n        <form className=\"post-form\" onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.handleChange} value={this.state.post.title}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Body</label>\n            <input type=\"text\" name=\"body\" placeholder=\"Enter something\" onChange={this.handleChange} value={this.state.post.body}/>\n          </div>\n          <input type=\"submit\"/>\n        </form>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}